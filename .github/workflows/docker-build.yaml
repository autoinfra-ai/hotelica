name: Build & Push Docker Images to ECR

on:
  push:
    branches:
      - main
      - master
  release:
    types: [published]

env:
  AWS_REGION: us-east-2
  ECR_REPOSITORY_BACKEND: perplexica-backend
  ECR_REPOSITORY_FRONTEND: perplexica-frontend
  ECS_CLUSTER: perplexica-cluster
  ECS_SERVICE: perplexica-service
  ECS_TASK_DEFINITION: .aws/task-definition.json

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [backend, frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'false'

      - name: Extract version from release tag
        if: github.event_name == 'release'
        id: version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build and push Docker image for ${{ matrix.service }}
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          if [[ "${{ matrix.service }}" == "backend" ]]; then \
            DOCKERFILE=backend.dockerfile; \
            IMAGE_NAME=${{ env.ECR_REPOSITORY_BACKEND }}; \
          else \
            DOCKERFILE=app.dockerfile; \
            IMAGE_NAME=${{ env.ECR_REPOSITORY_FRONTEND }}; \
          fi
          docker buildx create --use
          docker buildx build --platform linux/amd64,linux/arm64 \
            --cache-from=type=registry,ref=$REGISTRY/$IMAGE_NAME:main \
            --cache-to=type=inline \
            -f $DOCKERFILE \
            -t $REGISTRY/$IMAGE_NAME:$IMAGE_TAG \
            --push .

      - name: Build and push release Docker image for ${{ matrix.service }}
        if: github.event_name == 'release'
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          if [[ "${{ matrix.service }}" == "backend" ]]; then \
            DOCKERFILE=backend.dockerfile; \
            IMAGE_NAME=${{ env.ECR_REPOSITORY_BACKEND }}; \
          else \
            DOCKERFILE=app.dockerfile; \
            IMAGE_NAME=${{ env.ECR_REPOSITORY_FRONTEND }}; \
          fi
          docker buildx create --use
          docker buildx build --platform linux/amd64,linux/arm64 \
            --cache-from=type=registry,ref=$REGISTRY/$IMAGE_NAME:${{ env.RELEASE_VERSION }} \
            --cache-to=type=inline \
            -f $DOCKERFILE \
            -t $REGISTRY/$IMAGE_NAME:${{ env.RELEASE_VERSION }} \
            --push .
